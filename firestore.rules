rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function emailVerified() {
      return request.auth.token.email_verified;
    }

    // Users collection
    match /users/{userId} {
      // Allow reading own profile
      allow read: if isOwner(userId);
      
      // Allow creation only during signup
      allow create: if isSignedIn() 
        && request.auth.uid == userId
        && request.resource.data.keys().hasAll(['firstName', 'lastName', 'email', 'dateOfBirth', 'age', 'country'])
        && request.resource.data.email == request.auth.token.email
        && request.resource.data.uid == userId;
      
      // Allow updates to own profile with restrictions
      allow update: if isOwner(userId)
        && request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['firstName', 'lastName', 'country', 'updatedAt'])
        && !request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['email', 'uid', 'createdAt', 'emailVerified']);
      
      // Never allow deletion
      allow delete: if false;
    }

    // Admin users collection
    match /admin_users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only manually add admin users
    }
    
    // Players collection
    match /players/{playerId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }
    
    // Staff collection
    match /staff/{staffId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }
    
    // Posts collection
    match /posts/{postId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }
    
    // Matches collection
    match /matches/{matchId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }
    
    // Clubs collection
    match /clubs/{clubsId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }
    
    // Standings collection
    match /standings/{standingId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }

    // Memberships collection with admin control
    match /memberships/{membershipId} {
      allow read: if true;
      // Allow public creation with validation
      allow create: if 
        request.resource.data.keys().hasAll(['fullName', 'email', 'phone', 'dateOfBirth', 'address', 'createdAt', 'status', 'membershipType', 'membershipCode']) &&
        request.resource.data.status == 'pending' &&
        request.resource.data.membershipCode.matches('^[A-Z0-9]{6}$');
      // Allow admins full control
      allow update, delete: if isAdmin();
      // Allow admins to create without validation constraints
      allow create: if isAdmin();
    }

    // Keep other collections secure
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 